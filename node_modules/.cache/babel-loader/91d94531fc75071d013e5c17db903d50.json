{"ast":null,"code":"var _jsxFileName = \"/Users/tonigalata/Desktop/DPL/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport List from './components/todos/List';\nimport Form from './components/todos/Form';\nimport Footer from './components/todos/Footer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'Learn Rails',\n        complete: true\n      }, {\n        id: 2,\n        title: 'Learn React',\n        complete: false\n      }, {\n        id: 3,\n        title: 'Learn Hooks',\n        complete: false\n      }],\n      filter: 'All'\n    };\n\n    this.setFilter = incomingFilter => {\n      this.setState({\n        filter: incomingFilter\n      });\n    };\n\n    this.visibleTodos = () => {\n      const {\n        todos,\n        filter\n      } = this.state;\n\n      switch (filter) {\n        case 'Active':\n          return todos.filter(t => !t.complete);\n\n        case 'Complete':\n          return todos.filter(t => t.complete);\n\n        default:\n          return todos;\n      }\n    };\n\n    this.getUniqId = () => {\n      //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    this.addTodo = todo => {\n      const {\n        todos\n      } = this.state;\n      const newTodo = {\n        id: this.getUniqId(),\n        title: todo.title,\n        complete: false\n      }; //  const newTodo = {...todo} will work with a database, spread it out so you don't have to type it\n\n      this.setState({\n        todos: [newTodo, ...todos]\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      filter\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(List, {\n      name: \"Coding todo list\",\n      todos: this.visibleTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Form, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      filter: filter,\n      setFilter: this.setFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tonigalata/Desktop/DPL/todo-list/src/App.js"],"names":["React","Component","List","Form","Footer","App","state","todos","id","title","complete","filter","setFilter","incomingFilter","setState","visibleTodos","t","getUniqId","Math","floor","random","toString","substring","addTodo","todo","newTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AAAEC,MAAAA,KAAK,EAAE,CACf;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,aAAhB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OADe,EAEf;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,aAAhB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OAFe,EAGf;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,aAAhB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OAHe,CAAT;AAKNC,MAAAA,MAAM,EAAE;AALF,KADkB;;AAAA,SAS1BC,SAT0B,GASbC,cAAD,IAAoB;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE;AAAV,OAAd;AACD,KAXyB;;AAAA,SAa1BE,YAb0B,GAaX,MAAM;AACnB,YAAM;AAAER,QAAAA,KAAF;AAASI,QAAAA;AAAT,UAAoB,KAAKL,KAA/B;;AACA,cAAOK,MAAP;AACE,aAAK,QAAL;AACE,iBAAOJ,KAAK,CAACI,MAAN,CAAcK,CAAC,IAAI,CAACA,CAAC,CAACN,QAAtB,CAAP;;AACF,aAAK,UAAL;AACE,iBAAOH,KAAK,CAACI,MAAN,CAAcK,CAAC,IAAIA,CAAC,CAACN,QAArB,CAAP;;AACF;AACE,iBAAOH,KAAP;AANJ;AAQD,KAvByB;;AAAA,SAkC1BU,SAlC0B,GAkCd,MAAM;AAChB;AACA,aAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EACJC,QADI,CACK,EADL,EAEJC,SAFI,CAEM,CAFN,CAAP;AAGA,KAvCwB;;AAAA,SAyCzBC,OAzCyB,GAyCdC,IAAD,IAAU;AAClB,YAAM;AAAEjB,QAAAA;AAAF,UAAY,KAAKD,KAAvB;AACA,YAAMmB,OAAO,GAAG;AAAEjB,QAAAA,EAAE,EAAE,KAAKS,SAAL,EAAN;AAAwBR,QAAAA,KAAK,EAAEe,IAAI,CAACf,KAApC;AAA2CC,QAAAA,QAAQ,EAAE;AAArD,OAAhB,CAFkB,CAGnB;;AACC,WAAKI,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,CAACkB,OAAD,EAAU,GAAGlB,KAAb;AAAT,OAAd;AACD,KA9CwB;AAAA;;AAgD1BmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,KAAF;AAASI,MAAAA;AAAT,QAAoB,KAAKL,KAA/B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,kBAAX;AAA8B,MAAA,KAAK,EAAE,KAAKS,YAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEZ,MAAhB;AAAwB,MAAA,SAAS,EAAE,KAAKC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASD;;AA3DyB;;AA6D5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport List from './components/todos/List';\nimport Form from './components/todos/Form';\nimport Footer from './components/todos/Footer';\n\nclass App extends Component {\n  state = { todos: [\n    { id: 1, title: 'Learn Rails', complete: true },\n    { id: 2, title: 'Learn React', complete: false },\n    { id: 3, title: 'Learn Hooks', complete: false },\n    ],\n    filter: 'All'\n  }\n\n  setFilter = (incomingFilter) => {\n    this.setState({ filter: incomingFilter })\n  }\n\n  visibleTodos = () => {\n    const { todos, filter } = this.state\n    switch(filter) {\n      case 'Active':\n        return todos.filter( t => !t.complete )\n      case 'Complete':\n        return todos.filter( t => t.complete )\n      default:\n        return todos;\n    }\n  }\n\n  // renderTodos = () => {\n  //   const { todos } = this.state \n  //   return todos.map( todo => {\n  //     return (\n  //       <li key={todo.id}>{todo.title}</li>\n  //     )\n  //   })\n  // }\n\n  getUniqId = () => {\n    //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n   }\n\n   addTodo = (todo) => {\n     const { todos } = this.state\n     const newTodo = { id: this.getUniqId(), title: todo.title, complete: false}\n    //  const newTodo = {...todo} will work with a database, spread it out so you don't have to type it\n     this.setState({ todos: [newTodo, ...todos ]})\n   }\n\n  render() {\n    const { todos, filter } = this.state\n    return(\n      <div>\n        {/* { this.renderTodos() } */}\n        <List name='Coding todo list' todos={this.visibleTodos()} />\n        <Form addTodo={this.addTodo} />\n        <Footer filter={filter} setFilter={this.setFilter} />\n        {/* <List name='Coding todo list' todos /> */}\n      </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}