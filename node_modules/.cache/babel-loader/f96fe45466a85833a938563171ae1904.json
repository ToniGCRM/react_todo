{"ast":null,"code":"var _jsxFileName = \"/Users/tonigalata/Desktop/DPL/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport List from './components/todos/List';\nimport Form from './components/todos/Form';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'Learn Rails',\n        complete: true\n      }, {\n        id: 2,\n        title: 'Learn React',\n        complete: false\n      }, {\n        id: 3,\n        title: 'Learn Hooks',\n        complete: false\n      }],\n      filter: 'All'\n    };\n\n    this.setFilter = incomingFilter => {\n      this.setState({\n        filter: incomingFilter\n      });\n    };\n\n    this.getUniqId = () => {\n      //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    this.addTodo = todo => {\n      const {\n        todos\n      } = this.state;\n      const newTodo = {\n        id: this.getUniqId(),\n        title: todo.title,\n        complete: false\n      }; //  const newTodo = {...todo} will work with a database, spread it out so you don't have to type it\n\n      this.setState({\n        todos: [newTodo, ...todos]\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      filter\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(List, {\n      name: \"Coding todo list\",\n      todos: todos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Form, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      filter: filter,\n      setFilter: this.setFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tonigalata/Desktop/DPL/todo-list/src/App.js"],"names":["React","Component","List","Form","App","state","todos","id","title","complete","filter","setFilter","incomingFilter","setState","getUniqId","Math","floor","random","toString","substring","addTodo","todo","newTodo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AAAEC,MAAAA,KAAK,EAAE,CACf;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,aAAhB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OADe,EAEf;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,aAAhB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OAFe,EAGf;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,aAAhB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OAHe,CAAT;AAKNC,MAAAA,MAAM,EAAE;AALF,KADkB;;AAAA,SAS1BC,SAT0B,GASbC,cAAD,IAAoB;AAC9B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE;AAAV,OAAd;AACD,KAXyB;;AAAA,SAqB1BE,SArB0B,GAqBd,MAAM;AAChB;AACA,aAAOC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EACJC,QADI,CACK,EADL,EAEJC,SAFI,CAEM,CAFN,CAAP;AAGA,KA1BwB;;AAAA,SA4BzBC,OA5ByB,GA4BdC,IAAD,IAAU;AAClB,YAAM;AAAEf,QAAAA;AAAF,UAAY,KAAKD,KAAvB;AACA,YAAMiB,OAAO,GAAG;AAAEf,QAAAA,EAAE,EAAE,KAAKO,SAAL,EAAN;AAAwBN,QAAAA,KAAK,EAAEa,IAAI,CAACb,KAApC;AAA2CC,QAAAA,QAAQ,EAAE;AAArD,OAAhB,CAFkB,CAGnB;;AACC,WAAKI,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,CAACgB,OAAD,EAAU,GAAGhB,KAAb;AAAT,OAAd;AACD,KAjCwB;AAAA;;AAmC1BiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,KAAF;AAASI,MAAAA;AAAT,QAAoB,KAAKL,KAA/B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,kBAAX;AAA8B,MAAA,KAAK,EAAEC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKc,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEV,MAAhB;AAAwB,MAAA,SAAS,EAAE,KAAKC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASD;;AA9CyB;;AAgD5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport List from './components/todos/List';\nimport Form from './components/todos/Form'\n\nclass App extends Component {\n  state = { todos: [\n    { id: 1, title: 'Learn Rails', complete: true },\n    { id: 2, title: 'Learn React', complete: false },\n    { id: 3, title: 'Learn Hooks', complete: false },\n    ],\n    filter: 'All'\n  }\n\n  setFilter = (incomingFilter) => {\n    this.setState({ filter: incomingFilter })\n  }\n  // renderTodos = () => {\n  //   const { todos } = this.state \n  //   return todos.map( todo => {\n  //     return (\n  //       <li key={todo.id}>{todo.title}</li>\n  //     )\n  //   })\n  // }\n\n  getUniqId = () => {\n    //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n   }\n\n   addTodo = (todo) => {\n     const { todos } = this.state\n     const newTodo = { id: this.getUniqId(), title: todo.title, complete: false}\n    //  const newTodo = {...todo} will work with a database, spread it out so you don't have to type it\n     this.setState({ todos: [newTodo, ...todos ]})\n   }\n\n  render() {\n    const { todos, filter } = this.state\n    return(\n      <div>\n        {/* { this.renderTodos() } */}\n        <List name='Coding todo list' todos={todos} />\n        <Form addTodo={this.addTodo} />\n        <Footer filter={filter} setFilter={this.setFilter} />\n        {/* <List name='Coding todo list' todos /> */}\n      </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}