{"ast":null,"code":"var _jsxFileName = \"/Users/tonigalata/Desktop/DPL/todo-list/src/App.js\";\nimport React, { Component } from 'react';\nimport List from './components/todos/List';\nimport Form from './components/todos/Form';\nimport Footer from './components/todos/Footer';\nimport Clock from './components/todos/Clock';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'Learn Rails',\n        complete: true\n      }, {\n        id: 2,\n        title: 'Learn React',\n        complete: false\n      }, {\n        id: 3,\n        title: 'Learn Hooks',\n        complete: false\n      }],\n      filter: 'All',\n      showClock: false\n    };\n\n    this.toggleShowClock = () => {\n      // change opp value to what show clock is (toggle)\n      this.setState({\n        showClock: !this.state.showClock\n      });\n    };\n\n    this.setFilter = incomingFilter => {\n      this.setState({\n        filter: incomingFilter\n      });\n    };\n\n    this.visibleTodos = () => {\n      const {\n        todos,\n        filter\n      } = this.state;\n\n      switch (filter) {\n        case 'Active':\n          return todos.filter(t => !t.complete);\n\n        case 'Complete':\n          return todos.filter(t => t.complete);\n\n        default:\n          return todos;\n      }\n    };\n\n    this.getUniqId = () => {\n      //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    };\n\n    this.addTodo = todo => {\n      const {\n        todos\n      } = this.state;\n      const newTodo = {\n        id: this.getUniqId(),\n        title: todo.title,\n        complete: false\n      }; //  const newTodo = {...todo} will work with a database, spread it out so you don't have to type it\n\n      this.setState({\n        todos: [newTodo, ...todos]\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos,\n      filter,\n      showClock\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, showClock && React.createElement(Clock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.toggleShowClock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Clock Toggle\"), React.createElement(List, {\n      name: \"Coding todo list\",\n      todos: this.visibleTodos(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Form, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      filter: filter,\n      setFilter: this.setFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tonigalata/Desktop/DPL/todo-list/src/App.js"],"names":["React","Component","List","Form","Footer","Clock","App","state","todos","id","title","complete","filter","showClock","toggleShowClock","setState","setFilter","incomingFilter","visibleTodos","t","getUniqId","Math","floor","random","toString","substring","addTodo","todo","newTodo","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport List from './components/todos/List';\nimport Form from './components/todos/Form';\nimport Footer from './components/todos/Footer';\nimport Clock from './components/todos/Clock';\n\nclass App extends Component {\n  state = { todos: [\n    { id: 1, title: 'Learn Rails', complete: true },\n    { id: 2, title: 'Learn React', complete: false },\n    { id: 3, title: 'Learn Hooks', complete: false },\n    ],\n    filter: 'All',\n    showClock: false\n  }\n\n  toggleShowClock = () => {\n    // change opp value to what show clock is (toggle)\n    this.setState({ showClock: !this.state.showClock })\n  }\n\n  setFilter = (incomingFilter) => {\n    this.setState({ filter: incomingFilter })\n  }\n\n  visibleTodos = () => {\n    const { todos, filter } = this.state\n    switch(filter) {\n      case 'Active':\n        return todos.filter( t => !t.complete )\n      case 'Complete':\n        return todos.filter( t => t.complete )\n      default:\n        return todos;\n    }\n  }\n\n  // renderTodos = () => {\n  //   const { todos } = this.state \n  //   return todos.map( todo => {\n  //     return (\n  //       <li key={todo.id}>{todo.title}</li>\n  //     )\n  //   })\n  // }\n\n  getUniqId = () => {\n    //NOTE We are just using this as a helper function for id's since we aren't using a db yet\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n   }\n\n   addTodo = (todo) => {\n     const { todos } = this.state\n     const newTodo = { id: this.getUniqId(), title: todo.title, complete: false}\n    //  const newTodo = {...todo} will work with a database, spread it out so you don't have to type it\n     this.setState({ todos: [newTodo, ...todos ]})\n   }\n\n  render() {\n    const { todos, filter, showClock } = this.state\n    return(\n      <div>\n        {/* { this.renderTodos() } */}\n        {/* if true, show Clock, if not true, don't show */}\n        { showClock && <Clock /> }\n        <button onClick={this.toggleShowClock} >Clock Toggle</button>\n        <List name='Coding todo list' todos={this.visibleTodos()} />\n        <Form addTodo={this.addTodo} />\n        <Footer filter={filter} setFilter={this.setFilter} />\n        {/* <List name='Coding todo list' todos /> */}\n      </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}